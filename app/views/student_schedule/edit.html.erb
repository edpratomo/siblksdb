<%= render partial: 'shared/student_navbar' %>

<h3><%= @student.name %></h3>

<% unless @my_packages.empty? %>
  <% if @student.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@student.errors.count, "error") %> prohibited this student from being saved:</h2>

      <ul>
      <% @student.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<% @my_packages.each_with_index do |pkg,pkg_idx| %>
<%= render partial: 'schedule_form', locals: {pkg: pkg, pkg_idx: pkg_idx} %>
<% end %>

<script type="text/javascript">

$(function() {
  // SSE
  var es = new EventSource('<%= Rails.configuration.x.sse_base_url %>/seat/<%= ActiveRecord::Base.connection.current_database.split("_").last %>');
  es.onopen = function(e) {
    //alert("SSE connected");
    console.log("SSE connected");
  };
  es.onmessage = function(e) {
    console.log("es: " + e.data);
    var ary = e.data.split("_");
    var selector = "input[value='" + ary[0] + "']";
    $(selector).attr("seat", ary[1]);

    var old_text = $(".seat_" + ary[0]).text();
    //alert("old " + old_text);
    $(".seat_" + ary[0]).text(ary[1]);
  };

  var checkbox_ids = $('input[type="checkbox"]')
   .map(function() { return this.id; })
   .get();

  var disable_checkboxes = function(reference_id) {
    var checked_checkboxes = [];
    if (reference_id === undefined) {
      checked_checkboxes = $.grep(checkbox_ids, function(e) {
        return ($('#' + e).prop("checked") == true);
      });
    } else {
      checked_checkboxes = [reference_id];
    }

    var checked_prefixes = checked_checkboxes.map(function(e) {
      return e.replace(/_\d+$/, '_');
    });

    var checked_subprefixes = checked_checkboxes.map(function(e) {
      return e.replace(/_\d+_\d+$/, '_');
    });

    var disable_these_ids = $.grep(checkbox_ids, function(e) {
      var found = false;
      $.each(checked_subprefixes, function(idx, subprefix) {
        if (e.indexOf(subprefix) == 0) {
          found = true;
        }
      });
      if (found) {
        $.each(checked_prefixes, function(idx, prefix) {
          if (e.indexOf(prefix) == 0) {
            found = false;
            return false; // break each in javascript
          }
        });
        return found;
      } else {
        return false;
      }
    });

    $.each(disable_these_ids, function(idx, e) {
      $('#' + e).attr("disabled", true);
    });
  }

  var enable_checkboxes = function(reference_id) {
    var checked_subprefix = reference_id.replace(/_\d+_\d+$/, '_');

    var enable_these_ids = $.grep(checkbox_ids, function(e) {
      return (e.indexOf(checked_subprefix) == 0);
    });
    console.log("enable: " + enable_these_ids.join(', '));
    $.each(enable_these_ids, function(idx, e) {
      $('#' + e).removeAttr("disabled");
    });
  }

  disable_checkboxes();

  $('input[type="checkbox"]').change(function() {
    if (this.checked) {
      var checked_id = this.id;
      var avail_seat = $(this).attr("seat");
      if (avail_seat < 1) {
        BootstrapDialog.alert({
          title: 'WARNING',
          type: BootstrapDialog.TYPE_WARNING,
          message: 'Jadwal ini tidak dapat dipilih karena sudah penuh!',
        });
        $(this).attr("checked", false);
        return false;
      }
      checked_prefix = checked_id.replace(/_\d+$/, '_');
      checked_subprefix = checked_id.replace(/_\d+_\d+$/, '_');

      var uncheck_these = $.grep(checkbox_ids, function(e) {
        return (e.indexOf(checked_prefix) == 0 && e != checked_id);
      });

      $.each(uncheck_these, function(idx,e) {
        $('#' + e).attr('checked', false); 
      });
      disable_checkboxes(this.id);
    } else {
      // find subprefix and enable all checkboxes with this subprefix
      // alert("unchecked");
      //enable_checkboxes(this.id);
    }
  });

});

</script>

<% else %>

<p>Saat ini sedang tidak mengikuti kursus apapun.</p>
<%= link_to "Tambahkan Kursus", manage_pkg_student_path, :class => "btn btn-info btn-primary" %>
<% end %>
