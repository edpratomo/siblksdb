<h2>Edit peserta ujian</h2>

<% @grades.each do |grade| %>
  <% if grades.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(grade.errors.count, "error") %> prohibited this grade from being saved:</h2>

      <ul>
      <% grade.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
<% end %>

<div class="well">
<%= form_for_filterrific @student_filterrific do |f| %>

  <div class="row">
    <div class="col-md-4">
      <div class="form-group">
        <label>Tampilkan siswa yang mengikuti kursus</label>
        <%= f.select :with_current_pkg, @student_filterrific.select_options[:with_pkg],
                     { :include_blank => '- Semua -' },
                     { :class => 'form-control' }
        %>
      </div>
    </div>
  </div>
<% end %>
</div>

<%= form_tag(grades_path, {class: "form-inline", role: "form"}) do %>
  <%= hidden_field_tag 'hfield' %>
  <div id="exam_not_available" class="alert alert-danger">
    <strong>Error:</strong> Belum ada judul soal yang terdaftar untuk kursus ini.
  </div>
  <div id="choose_exam" class="well" style="background:#99CCFF">
    <div class="form-group">
      <%= label_tag :exam, "Pilih soal untuk peserta ujian", style: "padding-right:10px" %>
        <%= select_tag :exam_id, nil, 
                     { :prompt => '- Judul soal -', class: "form-control" } %>
    </div>
    <button type="submit" class="btn btn-default">Submit</button>
  </div>

<div id="filterrific_results">
  <%= render :partial => 'grades/list_students',
             :locals => { :students => @students, :instructor => @instructor }
  %>
</div>
<% end %>

<script type="text/javascript">
$(document).ready(function() {
  console.log("with_current_pkg: " + $("#filterrific_with_current_pkg").val());

  $("#exam_not_available").hide();

  if ($("#filterrific_with_current_pkg").val() == "") {
    $("#choose_exam").hide();
  } else {
    populate_options_for_exam($("#filterrific_with_current_pkg").val());
  }

  $("#filterrific_with_current_pkg").change(function() {
    if (this.value != "") {
      populate_options_for_exam(this.value);
    } else {
      $("#exam_not_available").hide();
      $("#choose_exam").hide();
    }
  });

  function populate_options_for_exam(pkg_id) {
    jQuery.ajax({
      url: "/grades/" + pkg_id + "/options_for_exam.json",
      type: "GET",
      dataType: "json",
      async: true,
      error: function(XMLHttpRequest, errorTextStatus, error) {
        alert("Failed: " + errorTextStatus + " ;" + error);
      },
      success: function(data) {
        $("#exam_id").find("option").remove().end();
        for (var i in data) {
          var id = data[i][1];
          var title = data[i][0];
          $("#exam_id").append(new Option(title, id));
        }
        if (data.length > 0) {
          $("#exam_not_available").hide();
          $("#choose_exam").show();
        } else {
          $("#exam_not_available").show();
          $("#choose_exam").hide();
        }
      }
    });
  }
});
</script>
